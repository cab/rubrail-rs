var N=null,E="",T="t",U="u",searchIndex={};
var R=["string","itemid","rubrail","option","touchbarimage","barid","tscrubberdata","buttoncb","result","try_from","try_into","borrow_mut","type_id","set_icon","create_bar","create_popover_item","add_items_to_bar","set_bar_as_root","create_label","update_label","update_label_width","create_text_scrubber","select_scrubber_item","refresh_scrubber","add_item_swipe_gesture","add_item_tap_gesture","create_spacer","spacertype","create_image_from_path","create_image_from_template","imagetemplate","create_button","update_button","update_button_width","create_slider","slidercb","update_slider","Set an icon to display in the Control Strip","Create a new horizontal bar UI","Adds a group of ordered items to a bar","Sets the given bar as the 'root' bar in the Control Strip","Create a button to open a 'popover' submenu.","Create a new label","Changes the text in an existing label","Changes the width of an existing label","Create a horizontally scrolling 'scrubber' of text","Selects the given index in a scrubber","Inform a scrubber to redraw after a change to its backing…","Register a tap gesture handler with a Touch Bar item","Register a swipe gesture handler with a Touch Bar item","swipecb","Create space between items in a bar","Create an image from a file path","Create an image from a template","Create a button that triggers a callback when pressed","Changes the image and/or text of a button","Changes the width of an existing button","Create a slider item","Update the current position of a slider","SwipeState","ImageTemplate","SpacerType","TScrubberData","TTouchbar","Touchbar"];

searchIndex["rubrail"]={"doc":"Rubrail","i":[[4,R[59],R[2],"State of the current swipe gesture on an item",N,N],[13,"Began",E,"Swipe gesture is newly detected (finger touched)",0,N],[13,"Changed",E,"Existing swipe gesture has continued/changed (finger swiped)",0,N],[13,"Ended",E,"Swipe gesture has ended (finger lifted)",0,N],[13,"Cancelled",E,"Swipe was cancelled by user",0,N],[13,"Failed",E,"Swipe failed... I dunno, ask Apple.",0,N],[13,"Unknown",E,"Invalid state.  Never sent to callbacks.",0,N],[4,R[60],E,"Identifiers for Apple's standard button image templates",N,N],[13,"AddDetailTemplate",E,E,1,N],[13,"AddTemplate",E,E,1,N],[13,"AlarmTemplate",E,E,1,N],[13,"AudioInputMuteTemplate",E,E,1,N],[13,"AudioInputTemplate",E,E,1,N],[13,"AudioOutputMuteTemplate",E,E,1,N],[13,"AudioOutputVolumeHighTemplate",E,E,1,N],[13,"AudioOutputVolumeLowTemplate",E,E,1,N],[13,"AudioOutputVolumeMediumTemplate",E,E,1,N],[13,"AudioOutputVolumeOffTemplate",E,E,1,N],[13,"BookmarksTemplate",E,E,1,N],[13,"ColorPickerFill",E,E,1,N],[13,"ColorPickerFont",E,E,1,N],[13,"ColorPickerStroke",E,E,1,N],[13,"CommunicationAudioTemplate",E,E,1,N],[13,"CommunicationVideoTemplate",E,E,1,N],[13,"ComposeTemplate",E,E,1,N],[13,"DeleteTemplate",E,E,1,N],[13,"DownloadTemplate",E,E,1,N],[13,"EnterFullScreenTemplate",E,E,1,N],[13,"ExitFullScreenTemplate",E,E,1,N],[13,"FastForwardTemplate",E,E,1,N],[13,"FolderCopyToTemplate",E,E,1,N],[13,"FolderMoveToTemplate",E,E,1,N],[13,"FolderTemplate",E,E,1,N],[13,"GetInfoTemplate",E,E,1,N],[13,"GoBackTemplate",E,E,1,N],[13,"GoDownTemplate",E,E,1,N],[13,"GoForwardTemplate",E,E,1,N],[13,"GoUpTemplate",E,E,1,N],[13,"HistoryTemplate",E,E,1,N],[13,"IconViewTemplate",E,E,1,N],[13,"ListViewTemplate",E,E,1,N],[13,"MailTemplate",E,E,1,N],[13,"NewFolderTemplate",E,E,1,N],[13,"NewMessageTemplate",E,E,1,N],[13,"OpenInBrowserTemplate",E,E,1,N],[13,"PauseTemplate",E,E,1,N],[13,"PlayheadTemplate",E,E,1,N],[13,"PlayPauseTemplate",E,E,1,N],[13,"PlayTemplate",E,E,1,N],[13,"QuickLookTemplate",E,E,1,N],[13,"RecordStartTemplate",E,E,1,N],[13,"RecordStopTemplate",E,E,1,N],[13,"RefreshTemplate",E,E,1,N],[13,"RewindTemplate",E,E,1,N],[13,"RotateLeftTemplate",E,E,1,N],[13,"RotateRightTemplate",E,E,1,N],[13,"SearchTemplate",E,E,1,N],[13,"ShareTemplate",E,E,1,N],[13,"SidebarTemplate",E,E,1,N],[13,"SkipAhead15SecondsTemplate",E,E,1,N],[13,"SkipAhead30SecondsTemplate",E,E,1,N],[13,"SkipAheadTemplate",E,E,1,N],[13,"SkipBack15SecondsTemplate",E,E,1,N],[13,"SkipBack30SecondsTemplate",E,E,1,N],[13,"SkipBackTemplate",E,E,1,N],[13,"SkipToEndTemplate",E,E,1,N],[13,"SkipToStartTemplate",E,E,1,N],[13,"SlideshowTemplate",E,E,1,N],[13,"TagIconTemplate",E,E,1,N],[13,"TextBoldTemplate",E,E,1,N],[13,"TextBoxTemplate",E,E,1,N],[13,"TextCenterAlignTemplate",E,E,1,N],[13,"TextItalicTemplate",E,E,1,N],[13,"TextJustifiedAlignTemplate",E,E,1,N],[13,"TextLeftAlignTemplate",E,E,1,N],[13,"TextListTemplate",E,E,1,N],[13,"TextRightAlignTemplate",E,E,1,N],[13,"TextStrikethroughTemplate",E,E,1,N],[13,"TextUnderlineTemplate",E,E,1,N],[13,"UserAddTemplate",E,E,1,N],[13,"UserGroupTemplate",E,E,1,N],[13,"UserTemplate",E,E,1,N],[4,R[61],E,"Identifiers for the type of spacing available between items",N,N],[13,"Small",E,"\"Small\" space, defined by Apple",2,N],[13,"Large",E,"\"Large\" space, defined by Apple",2,N],[13,"Flexible",E,"Flexible space, grows and shrinks as it can/needs",2,N],[0,"util",E,"Utility functions for working with the Apple/TouchBar…",N,N],[5,"print_nsstring","rubrail::util","Print an NSString object to the global logger",N,[[]]],[5,"nsstring_decode",E,"Convert an NSString object into a Rust String",N,[[],[R[0]]]],[5,"bundled_resource_path",E,"Locate a resource in the executing Mac App bundle",N,[[["str"]],[[R[0]],[R[3],[R[0]]]]]],[5,"set_bg_color",E,"Sets the backgroundColor attribute on an item's view.",N,[[[R[1]],["f64"]]]],[5,"set_text_color",E,"Sets the textColor attribute on an item's view.",N,[[[R[1]],["f64"]]]],[5,"get_appkit_version",E,"Get version of linked Apple AppKit framework",N,[[],["appkitversion"]]],[6,"BarId",R[2],"Reference to a horizontal bar created by a `TTouchbar`",N,N],[6,"ItemId",E,"Reference to an item that can be added to a bar created by…",N,N],[6,"ButtonCb",E,"A callback that is called when a button on a Touch Bar is…",N,N],[6,"SliderCb",E,"A callback that is called when the value of a slide on a…",N,N],[6,"SwipeCb",E,"A callback that is called when an item is swiped",N,N],[6,"TouchbarImage",E,"An allocated image that can be added to items",N,N],[6,R[64],E,"Controller for creating and using Touch Bar UIs",N,N],[8,R[62],E,"The callback API for managing data in a Scrubber",N,N],[10,"count",E,"Returns the number of items in the scrubber",3,[[["self"],[R[1]]],["u32"]]],[10,"text",E,"Returns the text of the given index in the scrubber",3,[[["self"],[R[1]],["u32"]],[R[0]]]],[10,"width",E,"Returns the width (in pixels) of the given index in the…",3,[[["self"],[R[1]],["u32"]],["u32"]]],[10,"touch",E,"Called when the given index in the scrubber is selected",3,[[["self"],[R[1]],["u32"]]]],[8,R[63],E,"API for creating, managing, and getting feedback from…",N,N],[16,"T",E,"A concrete implementation of TTouchbar",4,N],[10,"alloc",E,"Allocate a new Touch Bar interface",4,[[["str"]]]],[11,R[13],E,R[37],4,[[["self"],["str"]]]],[11,R[14],E,R[38],4,[[["self"]],[R[5]]]],[11,R[16],E,R[39],4,[[["self"],[R[5]],["vec",[R[1]]],[R[1]]]]],[11,R[17],E,R[40],4,[[["self"],[R[5]]]]],[11,R[15],E,R[41],4,[[["self"],[R[4]],[R[3],[R[4]]],[R[3],["str"]],["str"],[R[5]]],[R[1]]]],[11,R[18],E,R[42],4,[[["self"],["str"]],[R[1]]]],[11,R[19],E,R[43],4,[[["self"],[R[1]],["str"]]]],[11,R[20],E,R[44],4,[[["self"],[R[1]],["u32"]]]],[11,R[21],E,R[45],4,[[["self"],[R[6]],["rc",[R[6]]]],[R[1]]]],[11,R[22],E,R[46],4,[[["self"],[R[1]],["u32"]]]],[11,R[23],E,R[47],4,[[["self"],[R[1]]]]],[11,R[25],E,R[48],4,[[["self"],[R[1]],["u32"],[R[7]]]]],[11,R[24],E,R[49],4,[[["self"],[R[1]],[R[50]]]]],[11,R[26],E,R[51],4,[[["self"],[R[27]]],[R[1]]]],[11,R[28],E,R[52],4,[[["self"],["str"]],[R[4]]]],[11,R[29],E,R[53],4,[[["self"],[R[30]]],[R[4]]]],[11,R[31],E,R[54],4,[[["self"],[R[4]],[R[7]],[R[3],[R[4]]],[R[3],["str"]],["str"]],[R[1]]]],[11,R[32],E,R[55],4,[[["self"],[R[1]],[R[4]],[R[3],[R[4]]],[R[3],["str"]],["str"]]]],[11,R[33],E,R[56],4,[[["self"],[R[1]],["u32"]]]],[11,R[34],E,R[57],4,[[["self"],["str"],[R[3],["str"]],["f64"],[R[35]],["bool"]],[R[1]]]],[11,R[36],E,R[58],4,[[["self"],[R[1]],["f64"]]]],[14,"objc_subclass",E,"Wrap an Objective-C class in a subclass that tracks…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[[U]],[R[8]]]],[11,R[10],E,E,0,[[],[R[8]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],["typeid"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[[U]],[R[8]]]],[11,R[10],E,E,1,[[],[R[8]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],["typeid"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[[U]],[R[8]]]],[11,R[10],E,E,2,[[],[R[8]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],["typeid"]]],[11,"alloc",E,E,5,[[["str"]],["touchbar"]]],[11,R[13],E,E,5,[[["self"],["str"]]]],[11,R[14],E,E,5,[[["self"]],[R[5]]]],[11,R[15],E,E,5,[[["self"],[R[4]],[R[3],[R[4]]],[R[3],["str"]],["str"],[R[5]]],[R[1]]]],[11,R[16],E,E,5,[[["self"],[R[5]],["vec",[R[1]]],[R[1]]]]],[11,R[17],E,E,5,[[["self"],[R[5]]]]],[11,R[18],E,E,5,[[["self"],["str"]],[R[1]]]],[11,R[19],E,E,5,[[["self"],[R[1]],["str"]]]],[11,R[20],E,E,5,[[["self"],[R[1]],["u32"]]]],[11,R[21],E,E,5,[[["self"],[R[6]],["rc",[R[6]]]],[R[1]]]],[11,R[22],E,E,5,[[["self"],[R[1]],["u32"]]]],[11,R[23],E,E,5,[[["self"],[R[1]]]]],[11,R[24],E,E,5,[[["self"],[R[1]],[R[50]]]]],[11,R[25],E,E,5,[[["self"],[R[1]],["u32"],[R[7]]]]],[11,R[26],E,E,5,[[["self"],[R[27]]],[R[1]]]],[11,R[28],E,E,5,[[["self"],["str"]],[R[4]]]],[11,R[29],E,E,5,[[["self"],[R[30]]],[R[4]]]],[11,R[31],E,E,5,[[["self"],[R[4]],[R[7]],[R[3],[R[4]]],[R[3],["str"]],["str"]],[R[1]]]],[11,R[32],E,E,5,[[["self"],[R[1]],[R[4]],[R[3],[R[4]]],[R[3],["str"]],["str"]]]],[11,R[33],E,E,5,[[["self"],[R[1]],["u32"]]]],[11,R[34],E,E,5,[[["self"],["str"],[R[3],["str"]],["f64"],[R[35]],["bool"]],[R[1]]]],[11,R[36],E,E,5,[[["self"],[R[1]],["f64"]]]],[11,"eq",E,E,0,[[["self"],["swipestate"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],["formatter"]],[R[8]]]],[11,R[13],E,R[37],4,[[["self"],["str"]]]],[11,R[14],E,R[38],4,[[["self"]],[R[5]]]],[11,R[16],E,R[39],4,[[["self"],[R[5]],["vec",[R[1]]],[R[1]]]]],[11,R[17],E,R[40],4,[[["self"],[R[5]]]]],[11,R[15],E,R[41],4,[[["self"],[R[4]],[R[3],[R[4]]],[R[3],["str"]],["str"],[R[5]]],[R[1]]]],[11,R[18],E,R[42],4,[[["self"],["str"]],[R[1]]]],[11,R[19],E,R[43],4,[[["self"],[R[1]],["str"]]]],[11,R[20],E,R[44],4,[[["self"],[R[1]],["u32"]]]],[11,R[21],E,R[45],4,[[["self"],[R[6]],["rc",[R[6]]]],[R[1]]]],[11,R[22],E,R[46],4,[[["self"],[R[1]],["u32"]]]],[11,R[23],E,R[47],4,[[["self"],[R[1]]]]],[11,R[25],E,R[48],4,[[["self"],[R[1]],["u32"],[R[7]]]]],[11,R[24],E,R[49],4,[[["self"],[R[1]],[R[50]]]]],[11,R[26],E,R[51],4,[[["self"],[R[27]]],[R[1]]]],[11,R[28],E,R[52],4,[[["self"],["str"]],[R[4]]]],[11,R[29],E,R[53],4,[[["self"],[R[30]]],[R[4]]]],[11,R[31],E,R[54],4,[[["self"],[R[4]],[R[7]],[R[3],[R[4]]],[R[3],["str"]],["str"]],[R[1]]]],[11,R[32],E,R[55],4,[[["self"],[R[1]],[R[4]],[R[3],[R[4]]],[R[3],["str"]],["str"]]]],[11,R[33],E,R[56],4,[[["self"],[R[1]],["u32"]]]],[11,R[34],E,R[57],4,[[["self"],["str"],[R[3],["str"]],["f64"],[R[35]],["bool"]],[R[1]]]],[11,R[36],E,R[58],4,[[["self"],[R[1]],["f64"]]]]],"p":[[4,R[59]],[4,R[60]],[4,R[61]],[8,R[62]],[8,R[63]],[6,R[64]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);